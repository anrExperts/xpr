<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://ns.saxonica.com/xslt/export" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vv="http://saxon.sf.net/generated-variable" xmlns:java-type="http://saxon.sf.net/java-type" version="31" packageVersion="1" saxonVersion="9.8.0.12" target="JS" targetVersion="1" relocatable="false">
 <co id="0" binds="0 0">
  <mode onNo="TC" flags="dW" patternSlots="0">
   <templateRule prec="0" prio="-0.5" seq="0" rank="0" minImp="0" slots="0" flags="s" line="15" module="file:/Users/emmanuelchateau/Documents/experts/xpr/files/xsl/xpr2item.xsl">
    <p.nodeTest role="match" test="document-node()" jsTest="return SaxonJS.U.isNode(item) &amp;&amp; (item.nodeType===9||item.nodeType===11);"/>
    <sequence role="action" baseUri="file:/Users/emmanuelchateau/Documents/experts/xpr/files/xsl/xpr2item.xsl" ns="xsl=~ ixsl=~ xs=~ xpr=xpr" line="17">
     <resultDoc global="#&#xA;#Sun Mar 01 17:57:19 CET 2020&#xA;" local="#&#xA;#Sun Mar 01 17:57:19 CET 2020&#xA;method={http\://saxonica.com/ns/interactiveXSLT}replace-content&#xA;">
      <str role="href" val="#title"/>
      <valueOf role="content" line="18">
       <fn name="concat">
        <str val="Fiche "/>
        <atomSing card="?" diag="0|1||fn:concat">
         <filter flags="b">
          <fn name="key">
           <str val="Q{http://saxon.sf.net/}kk101"/>
           <str val="unitid"/>
           <dot type="document-node()"/>
          </fn>
          <fn name="exists">
           <filter flags="b">
            <axis name="parent" nodeTest="element(Q{xpr}sourceDesc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='xpr'&amp;&amp;q.local==='sourceDesc';"/>
            <fn name="exists">
             <axis name="parent" nodeTest="element(Q{xpr}expertise)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='xpr'&amp;&amp;q.local==='expertise';"/>
            </fn>
           </filter>
          </fn>
         </filter>
        </atomSing>
        <str val=", dossier n° "/>
        <atomSing card="?" diag="0|3||fn:concat">
         <filter flags="b">
          <fn name="key">
           <str val="Q{http://saxon.sf.net/}kk101"/>
           <str val="item"/>
           <dot type="document-node()"/>
          </fn>
          <fn name="exists">
           <filter flags="b">
            <axis name="parent" nodeTest="element(Q{xpr}sourceDesc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='xpr'&amp;&amp;q.local==='sourceDesc';"/>
            <fn name="exists">
             <axis name="parent" nodeTest="element(Q{xpr}expertise)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='xpr'&amp;&amp;q.local==='expertise';"/>
            </fn>
           </filter>
          </fn>
         </filter>
        </atomSing>
        <str val=" ("/>
        <atomSing card="?" diag="0|5||fn:concat">
         <slash>
          <docOrder intra="1">
           <slash>
            <filter flags="">
             <axis name="descendant" nodeTest="element(Q{xpr}sessions)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='xpr'&amp;&amp;q.local==='sessions';"/>
             <filter flags="">
              <axis name="parent" nodeTest="element(Q{xpr}description)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='xpr'&amp;&amp;q.local==='description';"/>
              <axis name="parent" nodeTest="element(Q{xpr}expertise)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='xpr'&amp;&amp;q.local==='expertise';"/>
             </filter>
            </filter>
            <first>
             <axis name="child" nodeTest="element(Q{xpr}date)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='xpr'&amp;&amp;q.local==='date';"/>
            </first>
           </slash>
          </docOrder>
          <axis name="attribute" nodeTest="attribute(Q{}when)" jsTest="return item.name==='when'"/>
         </slash>
        </atomSing>
        <str val=")"/>
       </fn>
      </valueOf>
     </resultDoc>
     <resultDoc line="21" global="#&#xA;#Sun Mar 01 17:57:19 CET 2020&#xA;method=xml&#xA;" local="#&#xA;#Sun Mar 01 17:57:19 CET 2020&#xA;">
      <str role="href" val="#expertises"/>
      <sequence role="content" line="23">
       <elem name="header" nsuri="" namespaces="xpr">
        <applyT bSlot="0">
         <filter role="select" flags="b">
          <axis name="descendant" nodeTest="element(Q{xpr}sourceDesc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='xpr'&amp;&amp;q.local==='sourceDesc';"/>
          <fn name="exists">
           <axis name="parent" nodeTest="element(Q{xpr}expertise)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='xpr'&amp;&amp;q.local==='expertise';"/>
          </fn>
         </filter>
        </applyT>
       </elem>
       <elem line="26" name="article" nsuri="" namespaces="xpr">
        <applyT bSlot="1">
         <axis role="select" name="child" nodeTest="element(Q{xpr}description)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='xpr'&amp;&amp;q.local==='description';"/>
        </applyT>
       </elem>
      </sequence>
     </resultDoc>
    </sequence>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="2" rank="1" minImp="0" slots="0" flags="s" line="42" module="file:/Users/emmanuelchateau/Documents/experts/xpr/files/xsl/xpr2item.xsl">
    <p.nodeTest role="match" test="element(Q{}description)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri===''&amp;&amp;q.local==='description';"/>
    <empty role="action"/>
   </templateRule>
   <templateRule prec="0" prio="0.0" seq="1" rank="1" minImp="0" slots="0" flags="s" line="31" module="file:/Users/emmanuelchateau/Documents/experts/xpr/files/xsl/xpr2item.xsl">
    <p.nodeTest role="match" test="element(Q{xpr}sourceDesc)" jsTest="var q=SaxonJS.U.nameOfNode(item); return SaxonJS.U.isNode(item) &amp;&amp; item.nodeType===1 &amp;&amp; q.uri==='xpr'&amp;&amp;q.local==='sourceDesc';"/>
    <elem role="action" baseUri="file:/Users/emmanuelchateau/Documents/experts/xpr/files/xsl/xpr2item.xsl" ns="xsl=~ ixsl=~ xs=~ xpr=xpr" line="33" name="ul" nsuri="" namespaces="xpr">
     <forEach>
      <axis name="child" nodeTest="element(Q{xpr}idno)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='xpr'&amp;&amp;q.local==='idno';"/>
      <elem line="35" name="li" nsuri="" flags="l" namespaces="xpr">
       <sequence>
        <valueOf flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <attVal name="Q{}type" chk="0"/>
         </convert>
        </valueOf>
        <valueOf flags="l">
         <str val=" : "/>
        </valueOf>
        <valueOf line="37" flags="l">
         <convert from="xs:untypedAtomic" to="xs:string">
          <data>
           <dot type="element(Q{xpr}idno)"/>
          </data>
         </convert>
        </valueOf>
       </sequence>
      </elem>
     </forEach>
    </elem>
   </templateRule>
  </mode>
 </co>
 <overridden/>
 <key name="Q{http://saxon.sf.net/}kk101" line="0" binds="" flags="u">
  <p.nodeSet type="element(Q{xpr}idno)">
   <axis baseUri="file:/Users/emmanuelchateau/Documents/experts/xpr/files/xsl/xpr2item.xsl" ns="xsl=~ ixsl=~ xs=~ xpr=xpr" line="18" name="descendant" nodeTest="element(Q{xpr}idno)" jsTest="var q=SaxonJS.U.nameOfNode(item); return item.nodeType===1 &amp;&amp; q.uri==='xpr'&amp;&amp;q.local==='idno';"/>
  </p.nodeSet>
  <attVal baseUri="file:/Users/emmanuelchateau/Documents/experts/xpr/files/xsl/xpr2item.xsl" ns="xsl=~ ixsl=~ xs=~ xpr=xpr" line="-1" name="Q{}type" chk="0"/>
 </key>
 <output>
  <property name="{http://saxon.sf.net/}stylesheet-version" value="31"/>
 </output>
 <decimalFormat/>
</package>
<?Σ 4f96342a?>

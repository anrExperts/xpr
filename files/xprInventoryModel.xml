<xf:model id="inventory" xmlns:xf="http://www.w3.org/2002/xforms" xmlns:ev="http://www.w3.org/2001/xml-events">
    <xf:action ev:event="xforms-ready">
        <!--add maintenanceEvent for revision-->
        <xf:insert if="/xpr:inventory/@xml:id"
                   context="instance('xprInventory')"
                   nodeset="xpr:control/xpr:maintenanceHistory/xpr:maintenanceEvent"
                   at="1"
                   position="before"
                   origin="instance('xprInventoryCopy')/xpr:control/xpr:maintenanceHistory/xpr:maintenanceEvent"/>
    </xf:action>
    <!--Instance principale-->
    <xf:instance id="xprInventory" src="/xpr/files/_xprInventoryInstance.xml"/>
    <xf:instance id="xprInventoryCopy" src="/xpr/files/_xprInventoryInstance.xml"/>

    <xf:bind nodeset="instance('xprInventory')/xpr:sourceDesc/xpr:idno[@type='unitid']"
                 required="true()"/>
    <xf:bind nodeset="instance('xprInventory')/xpr:sourceDesc/xpr:location"
                 required="true()"/>
    <xf:bind nodeset="instance('xprInventory')/xpr:sourceDesc/xpr:expert/@ref"
                 required="true()"/>
    <xf:bind nodeset="instance('xprInventory')/xpr:sourceDesc/xpr:date/@standardDate"
                 required="true()"
                 type="xf:date"/>
    <xf:bind nodeset="instance('xprInventory')/xpr:actors/xpr:deceased/xpr:deathDate/@standardDate"
                 type="xf:date"/>

    <xf:bind nodeset="instance('xprInventory')//xpr:deathPlace/xpr:noteworthy" relevant="parent::xpr:deathPlace/@type='other'"/>

    <xf:bind nodeset="instance('xprInventory')//xpr:place/xpr:parish" relevant="ancestor::xpr:place/@type='paris'"/>
    <xf:bind nodeset="instance('xprInventory')//xpr:place/xpr:city" relevant="ancestor::xpr:place/@type='suburbs' or parent::xpr:place/@type='province'"/>
    <xf:bind nodeset="instance('xprInventory')//xpr:place/xpr:district" relevant="ancestor::xpr:place/@type='suburbs' or ancestor::xpr:place/@type='province'"/>

    <xf:instance id="xprCurrency">
        <currency xmlns="xpr">
            <lt l="" s="" d=""></lt>
            <f f="" dec="" cent=""/>
        </currency>
    </xf:instance>

    <xf:instance id="xprHouseParts">
        <parts xmlns="xpr">
            <object type=""></object>
            <part type="courtyard">Cour</part>
            <part type="garden">Jardin</part>
            <part type="greenhouse">Serre</part>
            <part type="stable">Écurie</part>
            <part type="shed">Remise / Hangar</part>
            <part type="lodge">Loge du portier</part>
            <part type="cellar">Cave</part>
            <part type="kitchen">Cuisine</part>
            <part type="butlery">Office</part>
            <part type="pantry">Garde-manger</part>
            <part type="room">Pièce</part>
            <part type="anteroom">Antichambre</part>
            <part type="diningRoom">Salle à manger</part>
            <part type="livingRoom">Salle / salon / salon de compagnie</part>
            <part type="bedroom">Chambre</part>
            <part type="staffBedroom">Chambre de domestique</part>
            <part type="closet">Cabinet</part>
            <part type="expertStudy">Cabinet ou bureau désigné comme celui de l’expert</part>
            <part type="expertWorkingStudy">Cabinet où travaille l’expert</part>
            <part type="study">Bureau</part>
            <part type="boudoir">Boudoir</part>
            <part type="alcove">Alcôve</part>
            <part type="washroom">Cabinet de toilette</part>
            <part type="toilet">Cabinet d’aisance</part>
            <part type="wardrobe">Garde-robe</part>
            <part type="attic">Grenier</part>
            <part type="other">Autre</part>
        </parts>
    </xf:instance>

    <xf:instance id="xprDrawingTools">
        <objects xmlns="xpr">
            <object type=""></object>
            <object type="compas">Compas</object>
            <object type="pencilHolder">Porte-crayon</object>
            <object type="square">Équerre</object>
            <object type="rule">Règle</object>
            <object type="other">Autre</object>
        </objects>
    </xf:instance>

    <xf:instance id="xprMeasuringTools">
        <objects xmlns="xpr">
            <object type=""></object>
            <object type="heightGauge">Toise</object>
            <object type="feetGauge">Pied</object>
            <object type="waterFeetGauge">Pied d’eau</object>
            <object type="chain">Chaîne</object>
            <object type="other">Autre</object>
        </objects>
    </xf:instance>

    <xf:instance id="xprScientificObjects">
        <objects xmlns="xpr">
            <object type=""></object>
            <object type="globe">Globe</object>
            <object type="sphere">Sphère</object>
            <object type="worldMap">Mappemonde</object>
            <object type="sundial">Cadran solaire</object>
            <object type="compass">Boussole</object>
            <object type="microscope">Microscope</object>
            <object type="glasses">Lorgnette / lunette</object>
            <object type="barometer">Baromètre</object>
            <object type="thermometer">Thermomètre</object>
            <object type="samples">Échantillons (minéraux, coquillages)</object>
            <object type="plants">Plantes</object>
            <object type="animals">Animaux</object>
            <object type="telescope">Télescope</object>
            <object type="spottingScope">Lunette d'approche</object>
            <object type="other">Autre</object>
        </objects>
    </xf:instance>

    <xf:instance id="xprBoolean">
        <boolean xmlns="xpr">
            <state>
                <label>oui</label>
                <value>true</value>
            </state>
            <state>
                <label>non</label>
                <value>false</value>
            </state>
        </boolean>
    </xf:instance>

    <!-- get expert prosopo data from db when selected -->
    <xf:instance id="xprGetData">
        <data xmlns="xpr"/>
    </xf:instance>

    <xf:bind nodeset="instance('xprGetData')" calculate="substring-after(instance('xprInventory')/xpr:sourceDesc/xpr:expert/@ref, '#')"/>
    <xf:send ev:event="getData" submission="submitGetData"/>
    <xf:submission id="submitGetData" ref="instance('xprGetData')" method="get" resource="/xpr/xforms" replace="instance" instance="xprProsopo"/>

    <xf:submission id="submitInventory" mode="synchronous" resource="/xpr/inventories/put" method="put" replace="none">
        <xf:action ev:event="xforms-submit-done">
            <xf:hide dialog="saveInProgress"/>
            <xf:message level="modal">
                La ressource a été enregistrée !
                Status : <xf:output value="event('response-status-code')"/>;
                URI : <xf:output value="event('resource-uri')"/>;
                Headers : <xf:output value="event('response-headers')"/>;
                Reason : <xf:output value="event('response-reason-phrase')"/>;
                Body : <xf:output value="event('response-body')"/>.
            </xf:message>
            <xf:load resource="/xpr/inventories/view" show="replace"/>
        </xf:action>
        <xf:action ev:event="xforms-submit-error">
            <xf:hide dialog="saveInProgress"/>
            <xf:message level="modal">
                Une erreur est apparue : <xf:output value="event('error-type')"/>;
                Status : <xf:output value="event('response-status-code')"/>;
                URI : <xf:output value="event('resource-uri')"/>;
                Headers : <xf:output value="event('response-headers')"/>;
                Reason : <xf:output value="event('response-reason-phrase')"/>
                Body : <xf:output value="event('response-body')"/>.
            </xf:message>
        </xf:action>
    </xf:submission>

</xf:model>
